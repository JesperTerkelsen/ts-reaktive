ts-reaktive {
  actors {
    # How long to keep an AbstractStatefulPersistentActor around in memory after not having received any commands
    passivate-timeout = 1 minute

    tags {
      # If you want to customize that tag used for a specific event type, you can add a mapping here:
      # "my.package.MyEvent" = "tagname"
      # By default, the simple name of the class of the event type is used as tag.
    }

    materializer {
      # How many imported events to process at once. At most this number of events will
      # be imported in parallel.
      batch-size = 4

      # Delay before restarting the event stream to the backend if it completes or fails
      restart-delay = 10 seconds

      # How far to roll back time when resuming event import operations after a crash or restart.
      rollback = 10 seconds

      # updates to "offset" are only written this often. 
      # Decrease value to get more accurate resuming on failed restores.
      # Increase value to increase import performance (we save our progress less often that way)    
      update-accuracy = 1 second

      # Maximum number of events to expect which have the exact same timestamp
      # (to track progress, all events for the same timestamp are buffered into memory)
      max-events-per-timestamp = 25000

      # How often to repeat logging the offset (latency) of the stream into metrics.
      # We repeat this in order to keep updating the offset figure, even if no metrics are received.
      update-offset-interval = 1 minute
    }

    singleton {
      # minimum (initial) delay until singleton actors will start again, if it is terminated.
      # This delay is slowly increased until max-backoff if the actor keeps crashing.
      min-backoff = 5 seconds

      # maximum delay until singleton actors will start again, if it is terminated.
      max-backoff = 5 minutes
    }
  }
}
